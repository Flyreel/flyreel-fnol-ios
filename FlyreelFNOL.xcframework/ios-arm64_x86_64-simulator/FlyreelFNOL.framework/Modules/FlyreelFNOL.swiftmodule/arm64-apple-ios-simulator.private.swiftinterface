// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios13.0-simulator -enable-objc-interop -cxx-interoperability-mode=default -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name FlyreelFNOL
import AVKit
import DeveloperToolsSupport
import Foundation
import MetalKit
import Swift
import SwiftUI
import UIKit
import _AVKit_SwiftUI
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public class FlyreelFNOLTest {
  public init()
  public func testSharedCaptureModule()
  @objc deinit
}
public enum RecordingFinishState {
  case success, redo, abort
  public static func == (a: FlyreelFNOL.RecordingFinishState, b: FlyreelFNOL.RecordingFinishState) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
public struct FNOLCaptureView : SwiftUI.View {
  public init(clientID: Swift.String, onCaptureCompletion: ((Foundation.URL?) -> Swift.Void)? = nil)
  @_Concurrency.MainActor(unsafe) public var body: some SwiftUI.View {
    get
  }
  public typealias Body = @_opaqueReturnTypeOf("$s11FlyreelFNOL15FNOLCaptureViewV4bodyQrvp", 0) __
}


extension SwiftUI.View {
  public func compatibleFullScreen<Content>(isPresented: SwiftUI.Binding<Swift.Bool>, @SwiftUI.ViewBuilder content: @escaping () -> Content) -> some SwiftUI.View where Content : SwiftUI.View
  
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) public class NativeFNOLV3ViewController : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}


extension UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) public func presentFNOLCaptureView(clientID: Swift.String, onCaptureCompletion: @escaping (Foundation.URL?) -> Swift.Void)
}
extension FlyreelFNOL.RecordingFinishState : Swift.Equatable {}
extension FlyreelFNOL.RecordingFinishState : Swift.Hashable {}
